// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="vibrato,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z100ffg900-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.625000,HLS_SYN_LAT=119,HLS_SYN_TPT=none,HLS_SYN_MEM=72,HLS_SYN_DSP=105,HLS_SYN_FF=14138,HLS_SYN_LUT=13477}" *)

module vibrato (
        ap_clk,
        ap_rst_n,
        in_V_TDATA,
        in_V_TVALID,
        in_V_TREADY,
        out_V_TDATA,
        out_V_TVALID,
        out_V_TREADY,
        s_axi_CTRL_BUS_AWVALID,
        s_axi_CTRL_BUS_AWREADY,
        s_axi_CTRL_BUS_AWADDR,
        s_axi_CTRL_BUS_WVALID,
        s_axi_CTRL_BUS_WREADY,
        s_axi_CTRL_BUS_WDATA,
        s_axi_CTRL_BUS_WSTRB,
        s_axi_CTRL_BUS_ARVALID,
        s_axi_CTRL_BUS_ARREADY,
        s_axi_CTRL_BUS_ARADDR,
        s_axi_CTRL_BUS_RVALID,
        s_axi_CTRL_BUS_RREADY,
        s_axi_CTRL_BUS_RDATA,
        s_axi_CTRL_BUS_RRESP,
        s_axi_CTRL_BUS_BVALID,
        s_axi_CTRL_BUS_BREADY,
        s_axi_CTRL_BUS_BRESP
);

parameter    ap_ST_fsm_state1 = 97'd1;
parameter    ap_ST_fsm_state2 = 97'd2;
parameter    ap_ST_fsm_state3 = 97'd4;
parameter    ap_ST_fsm_state4 = 97'd8;
parameter    ap_ST_fsm_state5 = 97'd16;
parameter    ap_ST_fsm_state6 = 97'd32;
parameter    ap_ST_fsm_state7 = 97'd64;
parameter    ap_ST_fsm_state8 = 97'd128;
parameter    ap_ST_fsm_state9 = 97'd256;
parameter    ap_ST_fsm_state10 = 97'd512;
parameter    ap_ST_fsm_state11 = 97'd1024;
parameter    ap_ST_fsm_state12 = 97'd2048;
parameter    ap_ST_fsm_state13 = 97'd4096;
parameter    ap_ST_fsm_state14 = 97'd8192;
parameter    ap_ST_fsm_state15 = 97'd16384;
parameter    ap_ST_fsm_state16 = 97'd32768;
parameter    ap_ST_fsm_state17 = 97'd65536;
parameter    ap_ST_fsm_state18 = 97'd131072;
parameter    ap_ST_fsm_state19 = 97'd262144;
parameter    ap_ST_fsm_state20 = 97'd524288;
parameter    ap_ST_fsm_state21 = 97'd1048576;
parameter    ap_ST_fsm_state22 = 97'd2097152;
parameter    ap_ST_fsm_state23 = 97'd4194304;
parameter    ap_ST_fsm_state24 = 97'd8388608;
parameter    ap_ST_fsm_state25 = 97'd16777216;
parameter    ap_ST_fsm_state26 = 97'd33554432;
parameter    ap_ST_fsm_state27 = 97'd67108864;
parameter    ap_ST_fsm_state28 = 97'd134217728;
parameter    ap_ST_fsm_state29 = 97'd268435456;
parameter    ap_ST_fsm_state30 = 97'd536870912;
parameter    ap_ST_fsm_state31 = 97'd1073741824;
parameter    ap_ST_fsm_state32 = 97'd2147483648;
parameter    ap_ST_fsm_state33 = 97'd4294967296;
parameter    ap_ST_fsm_state34 = 97'd8589934592;
parameter    ap_ST_fsm_state35 = 97'd17179869184;
parameter    ap_ST_fsm_state36 = 97'd34359738368;
parameter    ap_ST_fsm_state37 = 97'd68719476736;
parameter    ap_ST_fsm_state38 = 97'd137438953472;
parameter    ap_ST_fsm_state39 = 97'd274877906944;
parameter    ap_ST_fsm_state40 = 97'd549755813888;
parameter    ap_ST_fsm_state41 = 97'd1099511627776;
parameter    ap_ST_fsm_state42 = 97'd2199023255552;
parameter    ap_ST_fsm_state43 = 97'd4398046511104;
parameter    ap_ST_fsm_state44 = 97'd8796093022208;
parameter    ap_ST_fsm_state45 = 97'd17592186044416;
parameter    ap_ST_fsm_state46 = 97'd35184372088832;
parameter    ap_ST_fsm_state47 = 97'd70368744177664;
parameter    ap_ST_fsm_state48 = 97'd140737488355328;
parameter    ap_ST_fsm_state49 = 97'd281474976710656;
parameter    ap_ST_fsm_state50 = 97'd562949953421312;
parameter    ap_ST_fsm_state51 = 97'd1125899906842624;
parameter    ap_ST_fsm_state52 = 97'd2251799813685248;
parameter    ap_ST_fsm_state53 = 97'd4503599627370496;
parameter    ap_ST_fsm_state54 = 97'd9007199254740992;
parameter    ap_ST_fsm_state55 = 97'd18014398509481984;
parameter    ap_ST_fsm_state56 = 97'd36028797018963968;
parameter    ap_ST_fsm_state57 = 97'd72057594037927936;
parameter    ap_ST_fsm_state58 = 97'd144115188075855872;
parameter    ap_ST_fsm_state59 = 97'd288230376151711744;
parameter    ap_ST_fsm_state60 = 97'd576460752303423488;
parameter    ap_ST_fsm_state61 = 97'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 97'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 97'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 97'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 97'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 97'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 97'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 97'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 97'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 97'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 97'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 97'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 97'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 97'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 97'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 97'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 97'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 97'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 97'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 97'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 97'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 97'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 97'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 97'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 97'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 97'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 97'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 97'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 97'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 97'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 97'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 97'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 97'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 97'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 97'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 97'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 97'd79228162514264337593543950336;
parameter    C_S_AXI_CTRL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_BUS_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_V_TDATA;
input   in_V_TVALID;
output   in_V_TREADY;
output  [31:0] out_V_TDATA;
output   out_V_TVALID;
input   out_V_TREADY;
input   s_axi_CTRL_BUS_AWVALID;
output   s_axi_CTRL_BUS_AWREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_AWADDR;
input   s_axi_CTRL_BUS_WVALID;
output   s_axi_CTRL_BUS_WREADY;
input  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_WDATA;
input  [C_S_AXI_CTRL_BUS_WSTRB_WIDTH - 1:0] s_axi_CTRL_BUS_WSTRB;
input   s_axi_CTRL_BUS_ARVALID;
output   s_axi_CTRL_BUS_ARREADY;
input  [C_S_AXI_CTRL_BUS_ADDR_WIDTH - 1:0] s_axi_CTRL_BUS_ARADDR;
output   s_axi_CTRL_BUS_RVALID;
input   s_axi_CTRL_BUS_RREADY;
output  [C_S_AXI_CTRL_BUS_DATA_WIDTH - 1:0] s_axi_CTRL_BUS_RDATA;
output  [1:0] s_axi_CTRL_BUS_RRESP;
output   s_axi_CTRL_BUS_BVALID;
input   s_axi_CTRL_BUS_BREADY;
output  [1:0] s_axi_CTRL_BUS_BRESP;

reg    ap_rst_n_inv;
reg   [31:0] in_V_0_data_out;
wire    in_V_0_vld_in;
wire    in_V_0_vld_out;
wire    in_V_0_ack_in;
reg    in_V_0_ack_out;
reg   [31:0] in_V_0_payload_A;
reg   [31:0] in_V_0_payload_B;
reg    in_V_0_sel_rd;
reg    in_V_0_sel_wr;
wire    in_V_0_sel;
wire    in_V_0_load_A;
wire    in_V_0_load_B;
reg   [1:0] in_V_0_state;
wire    in_V_0_state_cmp_full;
reg   [31:0] out_V_1_data_out;
reg    out_V_1_vld_in;
wire    out_V_1_vld_out;
wire    out_V_1_ack_in;
wire    out_V_1_ack_out;
reg   [31:0] out_V_1_payload_A;
reg   [31:0] out_V_1_payload_B;
reg    out_V_1_sel_rd;
reg    out_V_1_sel_wr;
wire    out_V_1_sel;
wire    out_V_1_load_A;
wire    out_V_1_load_B;
reg   [1:0] out_V_1_state;
wire    out_V_1_state_cmp_full;
wire   [31:0] delay;
wire   [31:0] depth;
reg   [0:0] Initialized;
reg   [31:0] phaseStep;
wire   [3:0] hls_ref_4oPi_table_s_address0;
reg    hls_ref_4oPi_table_s_ce0;
wire   [255:0] hls_ref_4oPi_table_s_q0;
wire   [7:0] hls_hotbm_fourth_o_4_address0;
reg    hls_hotbm_fourth_o_4_ce0;
wire   [58:0] hls_hotbm_fourth_o_4_q0;
wire   [7:0] hls_hotbm_fourth_o_5_address0;
reg    hls_hotbm_fourth_o_5_ce0;
wire   [51:0] hls_hotbm_fourth_o_5_q0;
wire   [7:0] hls_hotbm_fourth_o_6_address0;
reg    hls_hotbm_fourth_o_6_ce0;
wire   [43:0] hls_hotbm_fourth_o_6_q0;
wire   [7:0] hls_hotbm_fourth_o_7_address0;
reg    hls_hotbm_fourth_o_7_ce0;
wire   [32:0] hls_hotbm_fourth_o_7_q0;
wire   [7:0] hls_hotbm_fourth_o_address0;
reg    hls_hotbm_fourth_o_ce0;
wire   [24:0] hls_hotbm_fourth_o_q0;
reg   [31:0] writePos;
reg   [14:0] buffer_r_address0;
reg    buffer_r_ce0;
wire   [31:0] buffer_r_q0;
reg   [14:0] buffer_r_address1;
reg    buffer_r_ce1;
reg    buffer_r_we1;
wire   [31:0] buffer_r_q1;
reg    in_V_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [96:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
reg    out_V_TDATA_blk_n;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state97;
wire   [63:0] grp_fu_423_p2;
reg   [63:0] reg_435;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state49;
wire   [31:0] grp_fu_412_p1;
reg   [31:0] reg_441;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state62;
wire   [31:0] grp_fu_397_p2;
reg   [31:0] reg_447;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state87;
wire   [31:0] grp_fu_403_p2;
reg   [31:0] reg_453;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state91;
wire   [63:0] grp_fu_415_p1;
reg   [63:0] reg_459;
wire    ap_CS_fsm_state38;
wire   [63:0] grp_fu_429_p2;
reg   [63:0] reg_464;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state61;
wire   [31:0] grp_fu_409_p1;
reg   [31:0] reg_471;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state82;
reg   [31:0] reg_476;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state74;
reg   [31:0] delay_read_reg_1877;
wire    ap_CS_fsm_state1;
reg   [0:0] Initialized_load_reg_1882;
wire   [63:0] x_assign_fu_498_p3;
reg   [63:0] x_assign_reg_1887;
reg   [31:0] tmp_63_reg_1893;
reg   [0:0] results_sign_V_1_reg_1898;
wire    ap_CS_fsm_state3;
wire   [10:0] loc_V_fu_516_p4;
reg   [10:0] loc_V_reg_1904;
wire   [51:0] loc_V_1_fu_526_p1;
reg   [51:0] loc_V_1_reg_1911;
wire   [0:0] closepath_fu_530_p2;
reg   [0:0] closepath_reg_1917;
wire   [6:0] tmp_24_fu_565_p1;
reg   [6:0] tmp_24_reg_1928;
reg   [169:0] ret_V_reg_1933;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_43_i_fu_608_p2;
reg   [0:0] tmp_43_i_reg_1948;
reg   [123:0] p_Val2_7_reg_1954;
wire    ap_CS_fsm_state9;
reg   [2:0] tmp_47_i_i_reg_1960;
wire   [2:0] p_Val2_65_fu_639_p3;
reg   [2:0] p_Val2_65_reg_1965;
wire    ap_CS_fsm_state10;
wire   [123:0] p_Val2_8_fu_654_p3;
reg   [123:0] p_Val2_8_reg_1971;
reg   [60:0] p_Result_i3_i_i_reg_1976;
wire   [10:0] tmp_i_i_fu_671_p2;
reg   [10:0] tmp_i_i_reg_1981;
wire    ap_CS_fsm_state11;
wire   [5:0] Mx_zeros_V_fu_709_p1;
reg   [5:0] Mx_zeros_V_reg_1986;
wire   [0:0] tmp_42_i_fu_713_p2;
reg   [0:0] tmp_42_i_reg_1992;
wire   [0:0] tmp_44_i_fu_718_p2;
reg   [0:0] tmp_44_i_reg_1998;
reg   [62:0] Mx_V_reg_2004;
wire    ap_CS_fsm_state12;
wire   [10:0] Ex_V_fu_750_p2;
reg   [10:0] Ex_V_reg_2011;
wire   [0:0] isNeg_fu_760_p3;
reg   [0:0] isNeg_reg_2016;
wire   [11:0] sh_assign_6_fu_774_p3;
reg   [11:0] sh_assign_6_reg_2021;
reg   [6:0] p_Result_i_i_reg_2026;
wire    ap_CS_fsm_state13;
wire   [55:0] p_Val2_28_fu_816_p1;
reg   [55:0] p_Val2_28_reg_2031;
reg   [48:0] tmp_i1_i_reg_2036;
wire   [0:0] cos_basis_fu_830_p10;
reg   [0:0] cos_basis_reg_2041;
wire    ap_CS_fsm_state14;
wire   [97:0] OP1_V_fu_851_p1;
reg   [97:0] OP1_V_reg_2048;
wire   [63:0] tmp_64_i_i_fu_873_p1;
reg   [63:0] tmp_64_i_i_reg_2055;
reg   [48:0] tmp_58_i_i_reg_2072;
wire    ap_CS_fsm_state15;
reg  signed [51:0] hls_hotbm_fourth_o_9_reg_2078;
reg  signed [43:0] hls_hotbm_fourth_o_11_reg_2083;
wire   [97:0] OP2_V_fu_889_p1;
wire    ap_CS_fsm_state16;
reg   [41:0] tmp_60_i_i_reg_2130;
wire    ap_CS_fsm_state17;
reg   [34:0] tmp_62_i_i_reg_2135;
reg   [58:0] p_Val2_38_reg_2140;
reg   [55:0] tmp_35_i_i_reg_2145;
reg   [47:0] tmp_37_i_i_reg_2150;
reg   [32:0] hls_hotbm_fourth_o_13_reg_2155;
reg   [24:0] hls_hotbm_fourth_o_15_reg_2160;
wire    ap_CS_fsm_state18;
wire   [63:0] p_Val2_43_fu_1014_p2;
reg   [63:0] p_Val2_43_reg_2185;
reg   [36:0] tmp_10_reg_2190;
wire    ap_CS_fsm_state19;
reg   [28:0] tmp_21_reg_2195;
wire   [62:0] Mx_V_read_assign_fu_1040_p3;
reg   [62:0] Mx_V_read_assign_reg_2200;
wire    ap_CS_fsm_state20;
wire   [63:0] r_V_fu_1057_p2;
reg  signed [63:0] r_V_reg_2205;
wire    ap_CS_fsm_state21;
reg   [62:0] result_V_reg_2220;
wire    ap_CS_fsm_state25;
wire   [11:0] r_V_1_fu_1096_p2;
reg   [11:0] r_V_1_reg_2225;
wire   [63:0] grp_scaled_fixed2ieee_fu_391_ap_return;
reg   [63:0] resultf_reg_2230;
wire    ap_CS_fsm_state26;
wire    grp_scaled_fixed2ieee_fu_391_ap_done;
wire   [0:0] p_Result_s_fu_1238_p3;
reg   [0:0] p_Result_s_reg_2235;
wire    ap_CS_fsm_state27;
wire   [10:0] ret_V_6_fu_1268_p3;
reg   [10:0] ret_V_6_reg_2240;
wire   [51:0] ret_V_7_fu_1284_p3;
reg   [51:0] ret_V_7_reg_2245;
wire    ap_CS_fsm_state59;
wire   [0:0] tmp_33_fu_418_p2;
reg   [0:0] tmp_33_reg_2258;
wire    ap_CS_fsm_state63;
wire   [31:0] storemerge6_fu_1350_p3;
reg   [31:0] storemerge6_reg_2263;
reg   [0:0] p_Result_42_reg_2268;
wire    ap_CS_fsm_state70;
wire   [22:0] loc_V_5_fu_1380_p1;
reg   [22:0] loc_V_5_reg_2273;
wire   [0:0] isNeg_1_fu_1394_p3;
reg   [0:0] isNeg_1_reg_2278;
wire   [8:0] sh_assign_1_fu_1412_p3;
reg   [8:0] sh_assign_1_reg_2283;
wire   [31:0] tmp_86_i_i_i_fu_1484_p1;
reg   [31:0] tmp_86_i_i_i_reg_2289;
wire    ap_CS_fsm_state71;
wire   [31:0] tmp_89_i_i_i_fu_1488_p2;
reg   [31:0] tmp_89_i_i_i_reg_2294;
wire   [31:0] readPos_load_fu_1531_p3;
reg   [31:0] readPos_load_reg_2299;
wire    ap_CS_fsm_state72;
wire   [0:0] tmp_14_fu_1539_p2;
reg   [0:0] tmp_14_reg_2306;
wire   [31:0] p_Val2_55_fu_1558_p1;
reg   [31:0] p_Val2_55_reg_2321;
wire   [22:0] loc_V_7_fu_1572_p1;
reg   [22:0] loc_V_7_reg_2326;
wire   [0:0] isNeg_2_fu_1586_p3;
reg   [0:0] isNeg_2_reg_2331;
wire   [8:0] sh_assign_3_fu_1604_p3;
reg   [8:0] sh_assign_3_reg_2336;
wire   [31:0] p_Val2_60_fu_1612_p1;
reg   [31:0] p_Val2_60_reg_2342;
wire   [22:0] loc_V_9_fu_1626_p1;
reg   [22:0] loc_V_9_reg_2347;
wire   [0:0] isNeg_3_fu_1640_p3;
reg   [0:0] isNeg_3_reg_2352;
wire   [8:0] sh_assign_5_fu_1658_p3;
reg   [8:0] sh_assign_5_reg_2357;
wire   [30:0] p_Val2_57_fu_1751_p3;
reg   [30:0] p_Val2_57_reg_2363;
wire    ap_CS_fsm_state75;
wire   [30:0] p_Val2_62_fu_1815_p3;
reg   [30:0] p_Val2_62_reg_2368;
wire   [31:0] storemerge_fu_1870_p3;
reg   [31:0] storemerge_reg_2373;
wire    ap_CS_fsm_state76;
wire    grp_scaled_fixed2ieee_fu_391_ap_start;
wire    grp_scaled_fixed2ieee_fu_391_ap_idle;
wire    grp_scaled_fixed2ieee_fu_391_ap_ready;
reg    ap_reg_grp_scaled_fixed2ieee_fu_391_ap_start;
wire   [63:0] tmp_i2_i_i_fu_560_p1;
wire  signed [63:0] tmp_16_fu_1549_p1;
wire  signed [63:0] tmp_17_fu_1554_p1;
wire  signed [63:0] tmp_22_fu_1666_p1;
wire    ap_CS_fsm_state8;
wire   [31:0] storemerge5_fu_1680_p3;
reg   [31:0] grp_fu_397_p0;
reg   [31:0] grp_fu_397_p1;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state92;
reg   [31:0] grp_fu_403_p1;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state88;
reg   [31:0] grp_fu_409_p0;
wire    ap_CS_fsm_state77;
reg   [63:0] grp_fu_412_p0;
wire   [63:0] ret_i_i_i_fu_1299_p1;
reg   [31:0] grp_fu_415_p0;
reg   [63:0] grp_fu_423_p0;
reg   [63:0] grp_fu_423_p1;
wire    ap_CS_fsm_state45;
reg   [63:0] grp_fu_429_p0;
reg   [63:0] grp_fu_429_p1;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state56;
wire   [63:0] p_Val2_3_fu_505_p1;
wire   [10:0] expv_op_i_fu_536_p2;
wire   [10:0] addr_V_fu_542_p3;
wire   [3:0] p_Result_i_i_i_fu_550_p4;
wire   [255:0] tmp_34_i_i_i_fu_569_p1;
wire   [255:0] r_V_4_fu_572_p2;
wire   [52:0] p_Result_34_fu_588_p3;
wire   [52:0] grp_fu_602_p0;
wire   [169:0] grp_fu_602_p1;
wire   [222:0] grp_fu_602_p2;
wire   [0:0] tmp_34_fu_645_p1;
wire   [123:0] p_Val2_i_i_fu_649_p2;
wire   [61:0] p_Result_35_fu_676_p3;
reg   [61:0] p_Result_36_fu_683_p4;
wire   [63:0] p_Result_37_fu_693_p3;
reg   [63:0] tmp_i4_i_i_fu_701_p3;
wire   [123:0] tmp_48_i_i_fu_729_p1;
wire   [123:0] p_Val2_26_fu_732_p2;
wire   [10:0] storemerge_i_i_fu_723_p3;
wire   [10:0] tmp_51_i_i_fu_747_p1;
wire  signed [11:0] sh_i_cast_fu_756_p1;
wire   [11:0] tmp_53_i_i_fu_768_p2;
wire  signed [31:0] sh_assign_6_i_cast_fu_782_p1;
wire   [62:0] tmp_54_i_i_fu_785_p1;
wire   [62:0] tmp_55_i_i_fu_789_p2;
wire   [62:0] tmp_56_i_i_fu_794_p2;
wire   [62:0] p_Val2_s_fu_799_p3;
wire   [48:0] grp_fu_854_p0;
wire   [48:0] grp_fu_854_p1;
wire   [0:0] sin_basis_fu_860_p2;
wire   [7:0] p_Result_38_fu_866_p3;
wire   [97:0] grp_fu_854_p2;
wire   [48:0] grp_fu_892_p0;
wire   [48:0] grp_fu_892_p1;
wire   [48:0] grp_fu_897_p0;
wire   [48:0] grp_fu_897_p1;
wire   [55:0] grp_fu_909_p1;
wire   [48:0] grp_fu_921_p1;
wire   [97:0] grp_fu_892_p2;
wire   [97:0] grp_fu_897_p2;
wire   [107:0] grp_fu_909_p2;
wire   [92:0] grp_fu_921_p2;
wire   [32:0] grp_fu_980_p0;
wire   [41:0] grp_fu_980_p1;
wire   [24:0] grp_fu_992_p0;
wire   [34:0] grp_fu_992_p1;
wire   [62:0] p_Val2_40_fu_967_p3;
wire  signed [63:0] tmp_67_i_i_fu_1002_p1;
wire  signed [63:0] tmp_66_i_i_fu_998_p1;
wire  signed [63:0] tmp_69_i_i_cast_fu_1011_p1;
wire   [63:0] p_Val2_42_fu_1005_p2;
wire   [74:0] grp_fu_980_p2;
wire   [59:0] grp_fu_992_p2;
wire   [63:0] tmp_71_i_i_cast_fu_1046_p1;
wire   [63:0] tmp_73_i_i_cast_fu_1054_p1;
wire   [63:0] p_Val2_44_fu_1049_p2;
wire   [62:0] grp_fu_1069_p0;
wire   [125:0] grp_fu_1069_p2;
wire   [10:0] p_Ex_V_ret_i_fu_1075_p3;
wire  signed [11:0] rhs_V_1_fu_1092_p1;
wire   [63:0] p_Val2_46_fu_1103_p1;
wire   [3:0] p_Result_40_fu_1128_p3;
wire   [0:0] tmp_28_fu_1134_p18;
wire   [0:0] tmp_29_fu_1172_p18;
wire   [0:0] tmp_41_i_fu_1210_p3;
wire   [0:0] p_Result_39_fu_1106_p3;
wire   [0:0] p_Result_i_fu_1217_p2;
wire   [0:0] not_tmp_i_fu_1227_p2;
wire   [0:0] or_cond_i_fu_1223_p2;
wire   [0:0] p_Result_i_40_fu_1232_p2;
wire   [0:0] not_or_cond_i_demorg_fu_1245_p2;
wire   [0:0] not_or_cond_i_fu_1249_p2;
wire   [0:0] tmp_30_fu_1263_p2;
wire   [10:0] p_Result_1_i_cast_fu_1255_p3;
wire   [10:0] loc_V_2_fu_1114_p4;
wire   [51:0] p_Result_2_i_cast_fu_1276_p3;
wire   [51:0] loc_V_3_fu_1124_p1;
wire   [63:0] p_Result_41_fu_1292_p4;
wire   [31:0] tmp_to_int_fu_1309_p1;
wire   [7:0] tmp_31_fu_1313_p4;
wire   [22:0] tmp_49_fu_1323_p1;
wire   [0:0] notrhs_fu_1333_p2;
wire   [0:0] notlhs_fu_1327_p2;
wire   [0:0] tmp_32_fu_1339_p2;
wire   [0:0] tmp_35_fu_1345_p2;
wire   [31:0] p_Val2_50_fu_1358_p1;
wire   [7:0] loc_V_4_fu_1370_p4;
wire   [8:0] tmp_i_i_i_i_cast6_fu_1384_p1;
wire   [8:0] sh_assign_fu_1388_p2;
wire   [7:0] tmp_81_i_i_i_fu_1402_p2;
wire  signed [8:0] tmp_81_i_i_i_cast_fu_1408_p1;
wire   [24:0] tmp_80_i_i_i_fu_1420_p4;
wire  signed [31:0] sh_assign_1_cast_fu_1433_p1;
wire  signed [24:0] sh_assign_1_cast_cas_fu_1436_p1;
wire   [78:0] tmp_80_i_i_i_cast7_fu_1429_p1;
wire   [78:0] tmp_82_i_i_i_fu_1439_p1;
wire   [24:0] tmp_83_i_i_i_fu_1443_p2;
wire   [0:0] tmp_53_fu_1455_p3;
wire   [78:0] tmp_84_i_i_i_fu_1449_p2;
wire   [30:0] tmp_36_fu_1463_p1;
wire   [30:0] tmp_37_fu_1467_p4;
wire   [30:0] p_Val2_52_fu_1477_p3;
wire   [31:0] p_Val2_54_fu_1494_p3;
wire   [0:0] tmp_12_fu_1511_p2;
wire   [31:0] tmp_13_fu_1517_p2;
wire   [0:0] tmp_1_fu_1499_p2;
wire   [31:0] tmp_11_fu_1505_p2;
wire   [31:0] tmp_16_tmp_s_fu_1523_p3;
wire   [31:0] tmp_15_fu_1544_p2;
wire   [7:0] loc_V_6_fu_1562_p4;
wire   [8:0] tmp_i_i_i_i1_cast4_fu_1576_p1;
wire   [8:0] sh_assign_2_fu_1580_p2;
wire   [7:0] tmp_81_i_i_i1_fu_1594_p2;
wire  signed [8:0] tmp_81_i_i_i1_cast_fu_1600_p1;
wire   [7:0] loc_V_8_fu_1616_p4;
wire   [8:0] tmp_i_i_i_i8_cast2_fu_1630_p1;
wire   [8:0] sh_assign_4_fu_1634_p2;
wire   [7:0] tmp_81_i_i_i2_fu_1648_p2;
wire  signed [8:0] tmp_81_i_i_i2_cast_fu_1654_p1;
wire   [0:0] tmp_23_fu_1670_p2;
wire   [31:0] tmp_25_fu_1675_p2;
wire   [24:0] tmp_80_i_i_i1_fu_1694_p4;
wire  signed [31:0] sh_assign_3_cast_fu_1707_p1;
wire  signed [24:0] sh_assign_3_cast_cas_fu_1710_p1;
wire   [78:0] tmp_80_i_i_i1_cast5_fu_1703_p1;
wire   [78:0] tmp_82_i_i_i1_fu_1713_p1;
wire   [24:0] tmp_83_i_i_i1_fu_1717_p2;
wire   [0:0] tmp_57_fu_1729_p3;
wire   [78:0] tmp_84_i_i_i1_fu_1723_p2;
wire   [30:0] tmp_38_fu_1737_p1;
wire   [30:0] tmp_39_fu_1741_p4;
wire   [24:0] tmp_80_i_i_i7_fu_1758_p4;
wire  signed [31:0] sh_assign_5_cast_fu_1771_p1;
wire  signed [24:0] sh_assign_5_cast_cas_fu_1774_p1;
wire   [78:0] tmp_80_i_i_i7_cast3_fu_1767_p1;
wire   [78:0] tmp_82_i_i_i2_fu_1777_p1;
wire   [24:0] tmp_83_i_i_i2_fu_1781_p2;
wire   [0:0] tmp_61_fu_1793_p3;
wire   [78:0] tmp_84_i_i_i2_fu_1787_p2;
wire   [30:0] tmp_40_fu_1801_p1;
wire   [30:0] tmp_41_fu_1805_p4;
wire   [31:0] tmp_86_i_i_i1_fu_1829_p1;
wire   [0:0] p_Result_43_fu_1822_p3;
wire   [31:0] tmp_89_i_i_i1_fu_1832_p2;
wire   [31:0] tmp_86_i_i_i2_fu_1853_p1;
wire   [0:0] p_Result_44_fu_1846_p3;
wire   [31:0] tmp_89_i_i_i2_fu_1856_p2;
wire   [31:0] p_Val2_59_fu_1838_p3;
wire   [31:0] p_Val2_64_fu_1862_p3;
reg   [1:0] grp_fu_397_opcode;
reg    grp_fu_397_ce;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state85;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state95;
reg   [96:0] ap_NS_fsm;
wire   [125:0] grp_fu_1069_p00;
wire   [222:0] grp_fu_602_p00;
wire   [222:0] grp_fu_602_p10;
wire   [107:0] grp_fu_909_p10;
wire   [92:0] grp_fu_921_p10;
wire   [74:0] grp_fu_980_p00;
wire   [74:0] grp_fu_980_p10;
wire   [59:0] grp_fu_992_p00;
wire   [59:0] grp_fu_992_p10;

// power-on initialization
initial begin
#0 in_V_0_sel_rd = 1'b0;
#0 in_V_0_sel_wr = 1'b0;
#0 in_V_0_state = 2'd0;
#0 out_V_1_sel_rd = 1'b0;
#0 out_V_1_sel_wr = 1'b0;
#0 out_V_1_state = 2'd0;
#0 Initialized = 1'd0;
#0 phaseStep = 32'd0;
#0 writePos = 32'd0;
#0 ap_CS_fsm = 97'd1;
#0 ap_reg_grp_scaled_fixed2ieee_fu_391_ap_start = 1'b0;
end

vibrato_hls_ref_4bkb #(
    .DataWidth( 256 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
hls_ref_4oPi_table_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(hls_ref_4oPi_table_s_address0),
    .ce0(hls_ref_4oPi_table_s_ce0),
    .q0(hls_ref_4oPi_table_s_q0)
);

vibrato_hls_hotbmcud #(
    .DataWidth( 59 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hls_hotbm_fourth_o_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(hls_hotbm_fourth_o_4_address0),
    .ce0(hls_hotbm_fourth_o_4_ce0),
    .q0(hls_hotbm_fourth_o_4_q0)
);

vibrato_hls_hotbmdEe #(
    .DataWidth( 52 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hls_hotbm_fourth_o_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(hls_hotbm_fourth_o_5_address0),
    .ce0(hls_hotbm_fourth_o_5_ce0),
    .q0(hls_hotbm_fourth_o_5_q0)
);

vibrato_hls_hotbmeOg #(
    .DataWidth( 44 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hls_hotbm_fourth_o_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(hls_hotbm_fourth_o_6_address0),
    .ce0(hls_hotbm_fourth_o_6_ce0),
    .q0(hls_hotbm_fourth_o_6_q0)
);

vibrato_hls_hotbmfYi #(
    .DataWidth( 33 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hls_hotbm_fourth_o_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(hls_hotbm_fourth_o_7_address0),
    .ce0(hls_hotbm_fourth_o_7_ce0),
    .q0(hls_hotbm_fourth_o_7_q0)
);

vibrato_hls_hotbmg8j #(
    .DataWidth( 25 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hls_hotbm_fourth_o_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(hls_hotbm_fourth_o_address0),
    .ce0(hls_hotbm_fourth_o_ce0),
    .q0(hls_hotbm_fourth_o_q0)
);

vibrato_buffer_r #(
    .DataWidth( 32 ),
    .AddressRange( 24000 ),
    .AddressWidth( 15 ))
buffer_r_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_r_address0),
    .ce0(buffer_r_ce0),
    .q0(buffer_r_q0),
    .address1(buffer_r_address1),
    .ce1(buffer_r_ce1),
    .we1(buffer_r_we1),
    .d1(tmp_63_reg_1893),
    .q1(buffer_r_q1)
);

vibrato_CTRL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_BUS_DATA_WIDTH ))
vibrato_CTRL_BUS_s_axi_U(
    .AWVALID(s_axi_CTRL_BUS_AWVALID),
    .AWREADY(s_axi_CTRL_BUS_AWREADY),
    .AWADDR(s_axi_CTRL_BUS_AWADDR),
    .WVALID(s_axi_CTRL_BUS_WVALID),
    .WREADY(s_axi_CTRL_BUS_WREADY),
    .WDATA(s_axi_CTRL_BUS_WDATA),
    .WSTRB(s_axi_CTRL_BUS_WSTRB),
    .ARVALID(s_axi_CTRL_BUS_ARVALID),
    .ARREADY(s_axi_CTRL_BUS_ARREADY),
    .ARADDR(s_axi_CTRL_BUS_ARADDR),
    .RVALID(s_axi_CTRL_BUS_RVALID),
    .RREADY(s_axi_CTRL_BUS_RREADY),
    .RDATA(s_axi_CTRL_BUS_RDATA),
    .RRESP(s_axi_CTRL_BUS_RRESP),
    .BVALID(s_axi_CTRL_BUS_BVALID),
    .BREADY(s_axi_CTRL_BUS_BREADY),
    .BRESP(s_axi_CTRL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .delay(delay),
    .depth(depth)
);

scaled_fixed2ieee grp_scaled_fixed2ieee_fu_391(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_scaled_fixed2ieee_fu_391_ap_start),
    .ap_done(grp_scaled_fixed2ieee_fu_391_ap_done),
    .ap_idle(grp_scaled_fixed2ieee_fu_391_ap_idle),
    .ap_ready(grp_scaled_fixed2ieee_fu_391_ap_ready),
    .in_V(result_V_reg_2220),
    .prescale(r_V_1_reg_2225),
    .ap_return(grp_scaled_fixed2ieee_fu_391_ap_return)
);

vibrato_faddfsub_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vibrato_faddfsub_hbi_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_397_p0),
    .din1(grp_fu_397_p1),
    .opcode(grp_fu_397_opcode),
    .ce(grp_fu_397_ce),
    .dout(grp_fu_397_p2)
);

vibrato_fmul_32nsibs #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vibrato_fmul_32nsibs_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_447),
    .din1(grp_fu_403_p1),
    .ce(1'b1),
    .dout(grp_fu_403_p2)
);

vibrato_sitofp_32jbC #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
vibrato_sitofp_32jbC_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_409_p0),
    .ce(1'b1),
    .dout(grp_fu_409_p1)
);

vibrato_fptrunc_6kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
vibrato_fptrunc_6kbM_U8(
    .din0(grp_fu_412_p0),
    .dout(grp_fu_412_p1)
);

vibrato_fpext_32nlbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
vibrato_fpext_32nlbW_U9(
    .din0(grp_fu_415_p0),
    .dout(grp_fu_415_p1)
);

vibrato_fcmp_32nsmb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
vibrato_fcmp_32nsmb6_U10(
    .din0(reg_441),
    .din1(32'd1186693120),
    .opcode(5'd2),
    .dout(tmp_33_fu_418_p2)
);

vibrato_dadd_64nsncg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
vibrato_dadd_64nsncg_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_423_p0),
    .din1(grp_fu_423_p1),
    .ce(1'b1),
    .dout(grp_fu_423_p2)
);

vibrato_dmul_64nsocq #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
vibrato_dmul_64nsocq_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_429_p0),
    .din1(grp_fu_429_p1),
    .ce(1'b1),
    .dout(grp_fu_429_p2)
);

vibrato_mul_53ns_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 53 ),
    .din1_WIDTH( 170 ),
    .dout_WIDTH( 223 ))
vibrato_mul_53ns_pcA_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_602_p0),
    .din1(grp_fu_602_p1),
    .ce(1'b1),
    .dout(grp_fu_602_p2)
);

vibrato_mux_83_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
vibrato_mux_83_1_1_U14(
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd1),
    .din4(1'd0),
    .din5(1'd0),
    .din6(1'd1),
    .din7(1'd1),
    .din8(1'd0),
    .din9(p_Val2_65_reg_1965),
    .dout(cos_basis_fu_830_p10)
);

vibrato_mul_49ns_qcK #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
vibrato_mul_49ns_qcK_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_854_p0),
    .din1(grp_fu_854_p1),
    .ce(1'b1),
    .dout(grp_fu_854_p2)
);

vibrato_mul_49ns_qcK #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
vibrato_mul_49ns_qcK_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_892_p0),
    .din1(grp_fu_892_p1),
    .ce(1'b1),
    .dout(grp_fu_892_p2)
);

vibrato_mul_49ns_qcK #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 98 ))
vibrato_mul_49ns_qcK_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_897_p0),
    .din1(grp_fu_897_p1),
    .ce(1'b1),
    .dout(grp_fu_897_p2)
);

vibrato_mul_52s_5rcU #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 52 ),
    .din1_WIDTH( 56 ),
    .dout_WIDTH( 108 ))
vibrato_mul_52s_5rcU_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(hls_hotbm_fourth_o_9_reg_2078),
    .din1(grp_fu_909_p1),
    .ce(1'b1),
    .dout(grp_fu_909_p2)
);

vibrato_mul_44s_4sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 44 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 93 ))
vibrato_mul_44s_4sc4_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(hls_hotbm_fourth_o_11_reg_2083),
    .din1(grp_fu_921_p1),
    .ce(1'b1),
    .dout(grp_fu_921_p2)
);

vibrato_mul_33ns_tde #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 33 ),
    .din1_WIDTH( 42 ),
    .dout_WIDTH( 75 ))
vibrato_mul_33ns_tde_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_980_p0),
    .din1(grp_fu_980_p1),
    .ce(1'b1),
    .dout(grp_fu_980_p2)
);

vibrato_mul_25ns_udo #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 25 ),
    .din1_WIDTH( 35 ),
    .dout_WIDTH( 60 ))
vibrato_mul_25ns_udo_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_992_p0),
    .din1(grp_fu_992_p1),
    .ce(1'b1),
    .dout(grp_fu_992_p2)
);

vibrato_mul_63ns_vdy #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 63 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 126 ))
vibrato_mul_63ns_vdy_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1069_p0),
    .din1(r_V_reg_2205),
    .ce(1'b1),
    .dout(grp_fu_1069_p2)
);

vibrato_mux_164_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 1 ),
    .din17_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
vibrato_mux_164_1_1_U23(
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd1),
    .din8(1'd0),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(1'd0),
    .din17(p_Result_40_fu_1128_p3),
    .dout(tmp_28_fu_1134_p18)
);

vibrato_mux_164_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 1 ),
    .din17_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
vibrato_mux_164_1_1_U24(
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd1),
    .din9(1'd1),
    .din10(1'd0),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd1),
    .din15(1'd0),
    .din16(1'd0),
    .din17(p_Result_40_fu_1128_p3),
    .dout(tmp_29_fu_1172_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_scaled_fixed2ieee_fu_391_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_reg_grp_scaled_fixed2ieee_fu_391_ap_start <= 1'b1;
        end else if ((1'b1 == grp_scaled_fixed2ieee_fu_391_ap_ready)) begin
            ap_reg_grp_scaled_fixed2ieee_fu_391_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_V_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == in_V_0_ack_out) & (1'b1 == in_V_0_vld_out))) begin
            in_V_0_sel_rd <= ~in_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_V_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == in_V_0_vld_in) & (1'b1 == in_V_0_ack_in))) begin
            in_V_0_sel_wr <= ~in_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        in_V_0_state <= 2'd0;
    end else begin
        if ((((1'b0 == in_V_0_vld_in) & (1'b1 == in_V_0_ack_out) & (in_V_0_state == 2'd3)) | ((1'b0 == in_V_0_vld_in) & (in_V_0_state == 2'd2)))) begin
            in_V_0_state <= 2'd2;
        end else if ((((1'b1 == in_V_0_vld_in) & (1'b0 == in_V_0_ack_out) & (in_V_0_state == 2'd3)) | ((1'b0 == in_V_0_ack_out) & (in_V_0_state == 2'd1)))) begin
            in_V_0_state <= 2'd1;
        end else if ((((1'b1 == in_V_0_vld_in) & (in_V_0_state == 2'd2)) | ((1'b1 == in_V_0_ack_out) & (in_V_0_state == 2'd1)) | ((in_V_0_state == 2'd3) & ~((1'b1 == in_V_0_vld_in) & (1'b0 == in_V_0_ack_out)) & ~((1'b0 == in_V_0_vld_in) & (1'b1 == in_V_0_ack_out))))) begin
            in_V_0_state <= 2'd3;
        end else begin
            in_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_V_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == out_V_1_ack_out) & (1'b1 == out_V_1_vld_out))) begin
            out_V_1_sel_rd <= ~out_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_V_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == out_V_1_vld_in) & (1'b1 == out_V_1_ack_in))) begin
            out_V_1_sel_wr <= ~out_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        out_V_1_state <= 2'd0;
    end else begin
        if ((((1'b0 == out_V_1_vld_in) & (1'b1 == out_V_1_ack_out) & (2'd3 == out_V_1_state)) | ((1'b0 == out_V_1_vld_in) & (2'd2 == out_V_1_state)))) begin
            out_V_1_state <= 2'd2;
        end else if ((((1'b1 == out_V_1_vld_in) & (1'b0 == out_V_1_ack_out) & (2'd3 == out_V_1_state)) | ((1'b0 == out_V_1_ack_out) & (2'd1 == out_V_1_state)))) begin
            out_V_1_state <= 2'd1;
        end else if ((((1'b1 == out_V_1_vld_in) & (2'd2 == out_V_1_state)) | ((1'b1 == out_V_1_ack_out) & (2'd1 == out_V_1_state)) | ((2'd3 == out_V_1_state) & ~((1'b1 == out_V_1_vld_in) & (1'b0 == out_V_1_ack_out)) & ~((1'b0 == out_V_1_vld_in) & (1'b1 == out_V_1_ack_out))))) begin
            out_V_1_state <= 2'd3;
        end else begin
            out_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        reg_476 <= buffer_r_q1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        reg_476 <= buffer_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        Ex_V_reg_2011 <= Ex_V_fu_750_p2;
        Mx_V_reg_2004 <= {{p_Val2_26_fu_732_p2[123:61]}};
        isNeg_reg_2016 <= Ex_V_fu_750_p2[32'd10];
        sh_assign_6_reg_2021 <= sh_assign_6_fu_774_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        Initialized <= 1'd1;
        Initialized_load_reg_1882 <= Initialized;
        delay_read_reg_1877 <= delay;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        Mx_V_read_assign_reg_2200 <= Mx_V_read_assign_fu_1040_p3;
        r_V_reg_2205 <= r_V_fu_1057_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Mx_zeros_V_reg_1986 <= Mx_zeros_V_fu_709_p1;
        tmp_42_i_reg_1992 <= tmp_42_i_fu_713_p2;
        tmp_44_i_reg_1998 <= tmp_44_i_fu_718_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        OP1_V_reg_2048[48 : 0] <= OP1_V_fu_851_p1[48 : 0];
        cos_basis_reg_2041 <= cos_basis_fu_830_p10;
        tmp_64_i_i_reg_2055[7 : 0] <= tmp_64_i_i_fu_873_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        closepath_reg_1917 <= closepath_fu_530_p2;
        loc_V_1_reg_1911 <= loc_V_1_fu_526_p1;
        loc_V_reg_1904 <= {{p_Val2_3_fu_505_p1[62:52]}};
        results_sign_V_1_reg_1898 <= p_Val2_3_fu_505_p1[32'd63];
        tmp_24_reg_1928 <= tmp_24_fu_565_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        hls_hotbm_fourth_o_11_reg_2083 <= hls_hotbm_fourth_o_6_q0;
        hls_hotbm_fourth_o_9_reg_2078 <= hls_hotbm_fourth_o_5_q0;
        tmp_58_i_i_reg_2072 <= {{grp_fu_854_p2[97:49]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        hls_hotbm_fourth_o_13_reg_2155 <= hls_hotbm_fourth_o_7_q0;
        hls_hotbm_fourth_o_15_reg_2160 <= hls_hotbm_fourth_o_q0;
        p_Val2_38_reg_2140 <= hls_hotbm_fourth_o_4_q0;
        tmp_35_i_i_reg_2145 <= {{grp_fu_909_p2[107:52]}};
        tmp_37_i_i_reg_2150 <= {{grp_fu_921_p2[92:45]}};
        tmp_60_i_i_reg_2130 <= {{grp_fu_892_p2[97:56]}};
        tmp_62_i_i_reg_2135 <= {{grp_fu_897_p2[97:63]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == in_V_0_load_A)) begin
        in_V_0_payload_A <= in_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == in_V_0_load_B)) begin
        in_V_0_payload_B <= in_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        isNeg_1_reg_2278 <= sh_assign_fu_1388_p2[32'd8];
        loc_V_5_reg_2273 <= loc_V_5_fu_1380_p1;
        p_Result_42_reg_2268 <= p_Val2_50_fu_1358_p1[32'd31];
        sh_assign_1_reg_2283 <= sh_assign_1_fu_1412_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) & (1'd1 == tmp_14_reg_2306))) begin
        isNeg_2_reg_2331 <= sh_assign_2_fu_1580_p2[32'd8];
        loc_V_7_reg_2326 <= loc_V_7_fu_1572_p1;
        p_Val2_55_reg_2321 <= p_Val2_55_fu_1558_p1;
        sh_assign_3_reg_2336 <= sh_assign_3_fu_1604_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state74) & (1'd0 == tmp_14_reg_2306))) begin
        isNeg_3_reg_2352 <= sh_assign_4_fu_1634_p2[32'd8];
        loc_V_9_reg_2347 <= loc_V_9_fu_1626_p1;
        p_Val2_60_reg_2342 <= p_Val2_60_fu_1612_p1;
        sh_assign_5_reg_2357 <= sh_assign_5_fu_1658_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == out_V_1_load_A)) begin
        out_V_1_payload_A <= grp_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == out_V_1_load_B)) begin
        out_V_1_payload_B <= grp_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        p_Result_i3_i_i_reg_1976 <= {{p_Val2_8_fu_654_p3[123:63]}};
        p_Val2_65_reg_1965 <= p_Val2_65_fu_639_p3;
        p_Val2_8_reg_1971 <= p_Val2_8_fu_654_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        p_Result_i_i_reg_2026 <= {{p_Val2_s_fu_799_p3[62:56]}};
        p_Val2_28_reg_2031 <= p_Val2_28_fu_816_p1;
        tmp_i1_i_reg_2036 <= {{p_Val2_s_fu_799_p3[55:7]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        p_Result_s_reg_2235 <= p_Result_s_fu_1238_p3;
        ret_V_6_reg_2240 <= ret_V_6_fu_1268_p3;
        ret_V_7_reg_2245 <= ret_V_7_fu_1284_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        p_Val2_43_reg_2185 <= p_Val2_43_fu_1014_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == tmp_14_reg_2306) & (1'b1 == ap_CS_fsm_state75))) begin
        p_Val2_57_reg_2363 <= p_Val2_57_fu_1751_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == tmp_14_reg_2306) & (1'b1 == ap_CS_fsm_state75))) begin
        p_Val2_62_reg_2368 <= p_Val2_62_fu_1815_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        p_Val2_7_reg_1954 <= {{grp_fu_602_p2[166:43]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        phaseStep <= grp_fu_412_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        r_V_1_reg_2225 <= r_V_1_fu_1096_p2;
        result_V_reg_2220 <= {{grp_fu_1069_p2[125:63]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        readPos_load_reg_2299 <= readPos_load_fu_1531_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state49))) begin
        reg_435 <= grp_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state62))) begin
        reg_441 <= grp_fu_412_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state87) | ((1'b1 == ap_CS_fsm_state96) & (out_V_1_ack_in == 1'b1)))) begin
        reg_447 <= grp_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state91))) begin
        reg_453 <= grp_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state38))) begin
        reg_459 <= grp_fu_415_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state61))) begin
        reg_464 <= grp_fu_429_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state82))) begin
        reg_471 <= grp_fu_409_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (grp_scaled_fixed2ieee_fu_391_ap_done == 1'b1))) begin
        resultf_reg_2230 <= grp_scaled_fixed2ieee_fu_391_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ret_V_reg_1933 <= {{r_V_4_fu_572_p2[255:86]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        storemerge6_reg_2263 <= storemerge6_fu_1350_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        storemerge_reg_2373 <= storemerge_fu_1870_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_10_reg_2190 <= {{grp_fu_980_p2[74:38]}};
        tmp_21_reg_2195 <= {{grp_fu_992_p2[59:31]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        tmp_14_reg_2306 <= tmp_14_fu_1539_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        tmp_33_reg_2258 <= tmp_33_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_43_i_reg_1948 <= tmp_43_i_fu_608_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == closepath_reg_1917))) begin
        tmp_47_i_i_reg_1960 <= {{grp_fu_602_p2[169:167]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (in_V_0_vld_out == 1'b1))) begin
        tmp_63_reg_1893 <= in_V_0_data_out;
        x_assign_reg_1887 <= x_assign_fu_498_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        tmp_86_i_i_i_reg_2289[30 : 0] <= tmp_86_i_i_i_fu_1484_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state71) & (1'd1 == p_Result_42_reg_2268))) begin
        tmp_89_i_i_i_reg_2294 <= tmp_89_i_i_i_fu_1488_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (1'd1 == closepath_reg_1917))) begin
        tmp_i_i_reg_1981 <= tmp_i_i_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        writePos <= storemerge5_fu_1680_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        buffer_r_address0 = tmp_16_fu_1549_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        buffer_r_address0 = 15'd0;
    end else begin
        buffer_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        buffer_r_address1 = tmp_22_fu_1666_p1;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        buffer_r_address1 = tmp_17_fu_1554_p1;
    end else begin
        buffer_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state72))) begin
        buffer_r_ce0 = 1'b1;
    end else begin
        buffer_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state74))) begin
        buffer_r_ce1 = 1'b1;
    end else begin
        buffer_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        buffer_r_we1 = 1'b1;
    end else begin
        buffer_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state87) | ((1'b1 == ap_CS_fsm_state96) & (out_V_1_ack_in == 1'b1)) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state95))) begin
        grp_fu_397_ce = 1'b1;
    end else begin
        grp_fu_397_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state83))) begin
        grp_fu_397_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state92))) begin
        grp_fu_397_opcode = 2'd0;
    end else begin
        grp_fu_397_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_fu_397_p0 = reg_476;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state83))) begin
        grp_fu_397_p0 = reg_471;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_397_p0 = reg_441;
    end else begin
        grp_fu_397_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        grp_fu_397_p1 = reg_453;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_fu_397_p1 = reg_476;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_397_p1 = storemerge6_reg_2263;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_397_p1 = 32'd1065353216;
    end else begin
        grp_fu_397_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_403_p1 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_403_p1 = 32'd1056964608;
    end else begin
        grp_fu_403_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        grp_fu_409_p0 = storemerge_reg_2373;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_fu_409_p0 = writePos;
    end else begin
        grp_fu_409_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_412_p0 = reg_464;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_412_p0 = ret_i_i_i_fu_1299_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_412_p0 = reg_435;
    end else begin
        grp_fu_412_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_415_p0 = delay_read_reg_1877;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_415_p0 = reg_453;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_415_p0 = phaseStep;
    end else begin
        grp_fu_415_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_423_p0 = reg_464;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_423_p0 = x_assign_reg_1887;
    end else begin
        grp_fu_423_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_423_p1 = 64'd4607182418800017408;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_423_p1 = 64'd4596373779694328218;
    end else begin
        grp_fu_423_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_429_p0 = reg_464;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state50))) begin
        grp_fu_429_p0 = reg_459;
    end else begin
        grp_fu_429_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_429_p1 = 64'd4676829883349860352;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_429_p1 = reg_435;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_429_p1 = 64'd4599436227440940155;
    end else begin
        grp_fu_429_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        hls_hotbm_fourth_o_4_ce0 = 1'b1;
    end else begin
        hls_hotbm_fourth_o_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        hls_hotbm_fourth_o_5_ce0 = 1'b1;
    end else begin
        hls_hotbm_fourth_o_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        hls_hotbm_fourth_o_6_ce0 = 1'b1;
    end else begin
        hls_hotbm_fourth_o_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        hls_hotbm_fourth_o_7_ce0 = 1'b1;
    end else begin
        hls_hotbm_fourth_o_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        hls_hotbm_fourth_o_ce0 = 1'b1;
    end else begin
        hls_hotbm_fourth_o_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        hls_ref_4oPi_table_s_ce0 = 1'b1;
    end else begin
        hls_ref_4oPi_table_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (in_V_0_vld_out == 1'b1))) begin
        in_V_0_ack_out = 1'b1;
    end else begin
        in_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == in_V_0_sel)) begin
        in_V_0_data_out = in_V_0_payload_B;
    end else begin
        in_V_0_data_out = in_V_0_payload_A;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_V_TDATA_blk_n = in_V_0_state[1'd0];
    end else begin
        in_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == out_V_1_sel)) begin
        out_V_1_data_out = out_V_1_payload_B;
    end else begin
        out_V_1_data_out = out_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state96) & (out_V_1_ack_in == 1'b1))) begin
        out_V_1_vld_in = 1'b1;
    end else begin
        out_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state97))) begin
        out_V_TDATA_blk_n = out_V_1_state[1'd1];
    end else begin
        out_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (in_V_0_vld_out == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (grp_scaled_fixed2ieee_fu_391_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            if (((1'b1 == ap_CS_fsm_state96) & (out_V_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state96;
            end
        end
        ap_ST_fsm_state97 : begin
            if (((1'b1 == ap_CS_fsm_state97) & (out_V_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ex_V_fu_750_p2 = (storemerge_i_i_fu_723_p3 - tmp_51_i_i_fu_747_p1);

assign Mx_V_read_assign_fu_1040_p3 = ((cos_basis_reg_2041[0:0] === 1'b1) ? 63'd9223372036854775807 : Mx_V_reg_2004);

assign Mx_zeros_V_fu_709_p1 = tmp_i4_i_i_fu_701_p3[5:0];

assign OP1_V_fu_851_p1 = tmp_i1_i_reg_2036;

assign OP2_V_fu_889_p1 = tmp_58_i_i_reg_2072;

assign addr_V_fu_542_p3 = ((closepath_fu_530_p2[0:0] === 1'b1) ? 11'd74 : expv_op_i_fu_536_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign closepath_fu_530_p2 = ((loc_V_fu_516_p4 < 11'd1022) ? 1'b1 : 1'b0);

assign expv_op_i_fu_536_p2 = ($signed(11'd1101) + $signed(loc_V_fu_516_p4));

assign grp_fu_1069_p0 = grp_fu_1069_p00;

assign grp_fu_1069_p00 = Mx_V_read_assign_reg_2200;

assign grp_fu_602_p0 = grp_fu_602_p00;

assign grp_fu_602_p00 = p_Result_34_fu_588_p3;

assign grp_fu_602_p1 = grp_fu_602_p10;

assign grp_fu_602_p10 = ret_V_reg_1933;

assign grp_fu_854_p0 = OP1_V_fu_851_p1;

assign grp_fu_854_p1 = OP1_V_fu_851_p1;

assign grp_fu_892_p0 = OP2_V_fu_889_p1;

assign grp_fu_892_p1 = OP1_V_reg_2048;

assign grp_fu_897_p0 = OP2_V_fu_889_p1;

assign grp_fu_897_p1 = OP2_V_fu_889_p1;

assign grp_fu_909_p1 = grp_fu_909_p10;

assign grp_fu_909_p10 = p_Val2_28_reg_2031;

assign grp_fu_921_p1 = grp_fu_921_p10;

assign grp_fu_921_p10 = tmp_58_i_i_reg_2072;

assign grp_fu_980_p0 = grp_fu_980_p00;

assign grp_fu_980_p00 = hls_hotbm_fourth_o_13_reg_2155;

assign grp_fu_980_p1 = grp_fu_980_p10;

assign grp_fu_980_p10 = tmp_60_i_i_reg_2130;

assign grp_fu_992_p0 = grp_fu_992_p00;

assign grp_fu_992_p00 = hls_hotbm_fourth_o_15_reg_2160;

assign grp_fu_992_p1 = grp_fu_992_p10;

assign grp_fu_992_p10 = tmp_62_i_i_reg_2135;

assign grp_scaled_fixed2ieee_fu_391_ap_start = ap_reg_grp_scaled_fixed2ieee_fu_391_ap_start;

assign hls_hotbm_fourth_o_4_address0 = tmp_64_i_i_reg_2055;

assign hls_hotbm_fourth_o_5_address0 = tmp_64_i_i_fu_873_p1;

assign hls_hotbm_fourth_o_6_address0 = tmp_64_i_i_fu_873_p1;

assign hls_hotbm_fourth_o_7_address0 = tmp_64_i_i_reg_2055;

assign hls_hotbm_fourth_o_address0 = tmp_64_i_i_reg_2055;

assign hls_ref_4oPi_table_s_address0 = tmp_i2_i_i_fu_560_p1;

assign in_V_0_ack_in = in_V_0_state[1'd1];

assign in_V_0_load_A = (in_V_0_state_cmp_full & ~in_V_0_sel_wr);

assign in_V_0_load_B = (in_V_0_sel_wr & in_V_0_state_cmp_full);

assign in_V_0_sel = in_V_0_sel_rd;

assign in_V_0_state_cmp_full = ((in_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign in_V_0_vld_in = in_V_TVALID;

assign in_V_0_vld_out = in_V_0_state[1'd0];

assign in_V_TREADY = in_V_0_state[1'd1];

assign isNeg_1_fu_1394_p3 = sh_assign_fu_1388_p2[32'd8];

assign isNeg_2_fu_1586_p3 = sh_assign_2_fu_1580_p2[32'd8];

assign isNeg_3_fu_1640_p3 = sh_assign_4_fu_1634_p2[32'd8];

assign isNeg_fu_760_p3 = Ex_V_fu_750_p2[32'd10];

assign loc_V_1_fu_526_p1 = p_Val2_3_fu_505_p1[51:0];

assign loc_V_2_fu_1114_p4 = {{p_Val2_46_fu_1103_p1[62:52]}};

assign loc_V_3_fu_1124_p1 = p_Val2_46_fu_1103_p1[51:0];

assign loc_V_4_fu_1370_p4 = {{p_Val2_50_fu_1358_p1[30:23]}};

assign loc_V_5_fu_1380_p1 = p_Val2_50_fu_1358_p1[22:0];

assign loc_V_6_fu_1562_p4 = {{p_Val2_55_fu_1558_p1[30:23]}};

assign loc_V_7_fu_1572_p1 = p_Val2_55_fu_1558_p1[22:0];

assign loc_V_8_fu_1616_p4 = {{p_Val2_60_fu_1612_p1[30:23]}};

assign loc_V_9_fu_1626_p1 = p_Val2_60_fu_1612_p1[22:0];

assign loc_V_fu_516_p4 = {{p_Val2_3_fu_505_p1[62:52]}};

assign not_or_cond_i_demorg_fu_1245_p2 = (tmp_42_i_reg_1992 & tmp_43_i_reg_1948);

assign not_or_cond_i_fu_1249_p2 = (not_or_cond_i_demorg_fu_1245_p2 ^ 1'd1);

assign not_tmp_i_fu_1227_p2 = (tmp_44_i_reg_1998 ^ 1'd1);

assign notlhs_fu_1327_p2 = ((tmp_31_fu_1313_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs_fu_1333_p2 = ((tmp_49_fu_1323_p1 == 23'd0) ? 1'b1 : 1'b0);

assign or_cond_i_fu_1223_p2 = (tmp_42_i_reg_1992 & tmp_43_i_reg_1948);

assign out_V_1_ack_in = out_V_1_state[1'd1];

assign out_V_1_ack_out = out_V_TREADY;

assign out_V_1_load_A = (out_V_1_state_cmp_full & ~out_V_1_sel_wr);

assign out_V_1_load_B = (out_V_1_sel_wr & out_V_1_state_cmp_full);

assign out_V_1_sel = out_V_1_sel_rd;

assign out_V_1_state_cmp_full = ((out_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign out_V_1_vld_out = out_V_1_state[1'd0];

assign out_V_TDATA = out_V_1_data_out;

assign out_V_TVALID = out_V_1_state[1'd0];

assign p_Ex_V_ret_i_fu_1075_p3 = ((cos_basis_reg_2041[0:0] === 1'b1) ? 11'd0 : Ex_V_reg_2011);

assign p_Result_1_i_cast_fu_1255_p3 = ((not_or_cond_i_fu_1249_p2[0:0] === 1'b1) ? 11'd2047 : 11'd0);

assign p_Result_2_i_cast_fu_1276_p3 = ((not_or_cond_i_fu_1249_p2[0:0] === 1'b1) ? 52'd4503599627370495 : 52'd0);

assign p_Result_34_fu_588_p3 = {{1'd1}, {loc_V_1_reg_1911}};

assign p_Result_35_fu_676_p3 = {{p_Result_i3_i_i_reg_1976}, {1'd1}};

integer ap_tvar_int_0;

always @ (p_Result_35_fu_676_p3) begin
    for (ap_tvar_int_0 = 62 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 61 - 0) begin
            p_Result_36_fu_683_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_36_fu_683_p4[ap_tvar_int_0] = p_Result_35_fu_676_p3[61 - ap_tvar_int_0];
        end
    end
end

assign p_Result_37_fu_693_p3 = {{2'd3}, {p_Result_36_fu_683_p4}};

assign p_Result_38_fu_866_p3 = {{sin_basis_fu_860_p2}, {p_Result_i_i_reg_2026}};

assign p_Result_39_fu_1106_p3 = p_Val2_46_fu_1103_p1[32'd63];

assign p_Result_40_fu_1128_p3 = {{results_sign_V_1_reg_1898}, {p_Val2_65_reg_1965}};

assign p_Result_41_fu_1292_p4 = {{{p_Result_s_reg_2235}, {ret_V_6_reg_2240}}, {ret_V_7_reg_2245}};

assign p_Result_43_fu_1822_p3 = p_Val2_55_reg_2321[32'd31];

assign p_Result_44_fu_1846_p3 = p_Val2_60_reg_2342[32'd31];

assign p_Result_i_40_fu_1232_p2 = (p_Result_i_fu_1217_p2 & not_tmp_i_fu_1227_p2);

assign p_Result_i_fu_1217_p2 = (tmp_41_i_fu_1210_p3 | p_Result_39_fu_1106_p3);

assign p_Result_i_i_i_fu_550_p4 = {{addr_V_fu_542_p3[10:7]}};

assign p_Result_s_fu_1238_p3 = ((or_cond_i_fu_1223_p2[0:0] === 1'b1) ? results_sign_V_1_reg_1898 : p_Result_i_40_fu_1232_p2);

assign p_Val2_26_fu_732_p2 = p_Val2_8_reg_1971 << tmp_48_i_i_fu_729_p1;

assign p_Val2_28_fu_816_p1 = p_Val2_s_fu_799_p3[55:0];

assign p_Val2_3_fu_505_p1 = x_assign_reg_1887;

assign p_Val2_40_fu_967_p3 = {{p_Val2_38_reg_2140}, {4'd0}};

assign p_Val2_42_fu_1005_p2 = ($signed(tmp_67_i_i_fu_1002_p1) + $signed(tmp_66_i_i_fu_998_p1));

assign p_Val2_43_fu_1014_p2 = ($signed(tmp_69_i_i_cast_fu_1011_p1) + $signed(p_Val2_42_fu_1005_p2));

assign p_Val2_44_fu_1049_p2 = (tmp_71_i_i_cast_fu_1046_p1 + p_Val2_43_reg_2185);

assign p_Val2_46_fu_1103_p1 = resultf_reg_2230;

assign p_Val2_50_fu_1358_p1 = reg_447;

assign p_Val2_52_fu_1477_p3 = ((isNeg_1_reg_2278[0:0] === 1'b1) ? tmp_36_fu_1463_p1 : tmp_37_fu_1467_p4);

assign p_Val2_54_fu_1494_p3 = ((p_Result_42_reg_2268[0:0] === 1'b1) ? tmp_89_i_i_i_reg_2294 : tmp_86_i_i_i_reg_2289);

assign p_Val2_55_fu_1558_p1 = reg_476;

assign p_Val2_57_fu_1751_p3 = ((isNeg_2_reg_2331[0:0] === 1'b1) ? tmp_38_fu_1737_p1 : tmp_39_fu_1741_p4);

assign p_Val2_59_fu_1838_p3 = ((p_Result_43_fu_1822_p3[0:0] === 1'b1) ? tmp_89_i_i_i1_fu_1832_p2 : tmp_86_i_i_i1_fu_1829_p1);

assign p_Val2_60_fu_1612_p1 = buffer_r_q0;

assign p_Val2_62_fu_1815_p3 = ((isNeg_3_reg_2352[0:0] === 1'b1) ? tmp_40_fu_1801_p1 : tmp_41_fu_1805_p4);

assign p_Val2_64_fu_1862_p3 = ((p_Result_44_fu_1846_p3[0:0] === 1'b1) ? tmp_89_i_i_i2_fu_1856_p2 : tmp_86_i_i_i2_fu_1853_p1);

assign p_Val2_65_fu_639_p3 = ((closepath_reg_1917[0:0] === 1'b1) ? 3'd0 : tmp_47_i_i_reg_1960);

assign p_Val2_8_fu_654_p3 = ((tmp_34_fu_645_p1[0:0] === 1'b1) ? p_Val2_i_i_fu_649_p2 : p_Val2_7_reg_1954);

assign p_Val2_i_i_fu_649_p2 = (124'd0 - p_Val2_7_reg_1954);

assign p_Val2_s_fu_799_p3 = ((isNeg_reg_2016[0:0] === 1'b1) ? tmp_55_i_i_fu_789_p2 : tmp_56_i_i_fu_794_p2);

assign r_V_1_fu_1096_p2 = ($signed(12'd0) - $signed(rhs_V_1_fu_1092_p1));

assign r_V_4_fu_572_p2 = hls_ref_4oPi_table_s_q0 << tmp_34_i_i_i_fu_569_p1;

assign r_V_fu_1057_p2 = (tmp_73_i_i_cast_fu_1054_p1 + p_Val2_44_fu_1049_p2);

assign readPos_load_fu_1531_p3 = ((tmp_1_fu_1499_p2[0:0] === 1'b1) ? tmp_11_fu_1505_p2 : tmp_16_tmp_s_fu_1523_p3);

assign ret_V_6_fu_1268_p3 = ((tmp_30_fu_1263_p2[0:0] === 1'b1) ? p_Result_1_i_cast_fu_1255_p3 : loc_V_2_fu_1114_p4);

assign ret_V_7_fu_1284_p3 = ((tmp_30_fu_1263_p2[0:0] === 1'b1) ? p_Result_2_i_cast_fu_1276_p3 : loc_V_3_fu_1124_p1);

assign ret_i_i_i_fu_1299_p1 = p_Result_41_fu_1292_p4;

assign rhs_V_1_fu_1092_p1 = $signed(p_Ex_V_ret_i_fu_1075_p3);

assign sh_assign_1_cast_cas_fu_1436_p1 = $signed(sh_assign_1_reg_2283);

assign sh_assign_1_cast_fu_1433_p1 = $signed(sh_assign_1_reg_2283);

assign sh_assign_1_fu_1412_p3 = ((isNeg_1_fu_1394_p3[0:0] === 1'b1) ? tmp_81_i_i_i_cast_fu_1408_p1 : sh_assign_fu_1388_p2);

assign sh_assign_2_fu_1580_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i1_cast4_fu_1576_p1));

assign sh_assign_3_cast_cas_fu_1710_p1 = $signed(sh_assign_3_reg_2336);

assign sh_assign_3_cast_fu_1707_p1 = $signed(sh_assign_3_reg_2336);

assign sh_assign_3_fu_1604_p3 = ((isNeg_2_fu_1586_p3[0:0] === 1'b1) ? tmp_81_i_i_i1_cast_fu_1600_p1 : sh_assign_2_fu_1580_p2);

assign sh_assign_4_fu_1634_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i8_cast2_fu_1630_p1));

assign sh_assign_5_cast_cas_fu_1774_p1 = $signed(sh_assign_5_reg_2357);

assign sh_assign_5_cast_fu_1771_p1 = $signed(sh_assign_5_reg_2357);

assign sh_assign_5_fu_1658_p3 = ((isNeg_3_fu_1640_p3[0:0] === 1'b1) ? tmp_81_i_i_i2_cast_fu_1654_p1 : sh_assign_4_fu_1634_p2);

assign sh_assign_6_fu_774_p3 = ((isNeg_fu_760_p3[0:0] === 1'b1) ? tmp_53_i_i_fu_768_p2 : sh_i_cast_fu_756_p1);

assign sh_assign_6_i_cast_fu_782_p1 = $signed(sh_assign_6_reg_2021);

assign sh_assign_fu_1388_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_cast6_fu_1384_p1));

assign sh_i_cast_fu_756_p1 = $signed(Ex_V_fu_750_p2);

assign sin_basis_fu_860_p2 = (cos_basis_fu_830_p10 ^ 1'd1);

assign storemerge5_fu_1680_p3 = ((tmp_23_fu_1670_p2[0:0] === 1'b1) ? 32'd0 : tmp_25_fu_1675_p2);

assign storemerge6_fu_1350_p3 = ((tmp_35_fu_1345_p2[0:0] === 1'b1) ? 32'd1186693120 : reg_441);

assign storemerge_fu_1870_p3 = ((tmp_14_reg_2306[0:0] === 1'b1) ? p_Val2_59_fu_1838_p3 : p_Val2_64_fu_1862_p3);

assign storemerge_i_i_fu_723_p3 = ((closepath_reg_1917[0:0] === 1'b1) ? tmp_i_i_reg_1981 : 11'd0);

assign tmp_11_fu_1505_p2 = ($signed(32'd4294943296) + $signed(p_Val2_54_fu_1494_p3));

assign tmp_12_fu_1511_p2 = (($signed(p_Val2_54_fu_1494_p3) < $signed(32'd1)) ? 1'b1 : 1'b0);

assign tmp_13_fu_1517_p2 = (32'd24000 + p_Val2_54_fu_1494_p3);

assign tmp_14_fu_1539_p2 = ((readPos_load_reg_2299 == 32'd23999) ? 1'b1 : 1'b0);

assign tmp_15_fu_1544_p2 = (32'd1 + readPos_load_reg_2299);

assign tmp_16_fu_1549_p1 = $signed(tmp_15_fu_1544_p2);

assign tmp_16_tmp_s_fu_1523_p3 = ((tmp_12_fu_1511_p2[0:0] === 1'b1) ? tmp_13_fu_1517_p2 : p_Val2_54_fu_1494_p3);

assign tmp_17_fu_1554_p1 = $signed(readPos_load_reg_2299);

assign tmp_1_fu_1499_p2 = (($signed(p_Val2_54_fu_1494_p3) > $signed(32'd24000)) ? 1'b1 : 1'b0);

assign tmp_22_fu_1666_p1 = $signed(writePos);

assign tmp_23_fu_1670_p2 = ((writePos == 32'd23999) ? 1'b1 : 1'b0);

assign tmp_24_fu_565_p1 = addr_V_fu_542_p3[6:0];

assign tmp_25_fu_1675_p2 = (32'd1 + writePos);

assign tmp_30_fu_1263_p2 = (or_cond_i_fu_1223_p2 | tmp_44_i_reg_1998);

assign tmp_31_fu_1313_p4 = {{tmp_to_int_fu_1309_p1[30:23]}};

assign tmp_32_fu_1339_p2 = (notrhs_fu_1333_p2 | notlhs_fu_1327_p2);

assign tmp_34_fu_645_p1 = p_Val2_65_fu_639_p3[0:0];

assign tmp_34_i_i_i_fu_569_p1 = tmp_24_reg_1928;

assign tmp_35_fu_1345_p2 = (tmp_32_fu_1339_p2 & tmp_33_reg_2258);

assign tmp_36_fu_1463_p1 = tmp_53_fu_1455_p3;

assign tmp_37_fu_1467_p4 = {{tmp_84_i_i_i_fu_1449_p2[54:24]}};

assign tmp_38_fu_1737_p1 = tmp_57_fu_1729_p3;

assign tmp_39_fu_1741_p4 = {{tmp_84_i_i_i1_fu_1723_p2[54:24]}};

assign tmp_40_fu_1801_p1 = tmp_61_fu_1793_p3;

assign tmp_41_fu_1805_p4 = {{tmp_84_i_i_i2_fu_1787_p2[54:24]}};

assign tmp_41_i_fu_1210_p3 = ((cos_basis_reg_2041[0:0] === 1'b1) ? tmp_28_fu_1134_p18 : tmp_29_fu_1172_p18);

assign tmp_42_i_fu_713_p2 = ((loc_V_reg_1904 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_43_i_fu_608_p2 = ((loc_V_1_reg_1911 == 52'd0) ? 1'b1 : 1'b0);

assign tmp_44_i_fu_718_p2 = ((loc_V_reg_1904 == 11'd2047) ? 1'b1 : 1'b0);

assign tmp_48_i_i_fu_729_p1 = Mx_zeros_V_reg_1986;

assign tmp_49_fu_1323_p1 = tmp_to_int_fu_1309_p1[22:0];

assign tmp_51_i_i_fu_747_p1 = Mx_zeros_V_reg_1986;

assign tmp_53_fu_1455_p3 = tmp_83_i_i_i_fu_1443_p2[32'd24];

assign tmp_53_i_i_fu_768_p2 = ($signed(12'd0) - $signed(sh_i_cast_fu_756_p1));

assign tmp_54_i_i_fu_785_p1 = $unsigned(sh_assign_6_i_cast_fu_782_p1);

assign tmp_55_i_i_fu_789_p2 = Mx_V_reg_2004 >> tmp_54_i_i_fu_785_p1;

assign tmp_56_i_i_fu_794_p2 = Mx_V_reg_2004 << tmp_54_i_i_fu_785_p1;

assign tmp_57_fu_1729_p3 = tmp_83_i_i_i1_fu_1717_p2[32'd24];

assign tmp_61_fu_1793_p3 = tmp_83_i_i_i2_fu_1781_p2[32'd24];

assign tmp_64_i_i_fu_873_p1 = p_Result_38_fu_866_p3;

assign tmp_66_i_i_fu_998_p1 = $signed(p_Val2_40_fu_967_p3);

assign tmp_67_i_i_fu_1002_p1 = $signed(tmp_35_i_i_reg_2145);

assign tmp_69_i_i_cast_fu_1011_p1 = $signed(tmp_37_i_i_reg_2150);

assign tmp_71_i_i_cast_fu_1046_p1 = tmp_10_reg_2190;

assign tmp_73_i_i_cast_fu_1054_p1 = tmp_21_reg_2195;

assign tmp_80_i_i_i1_cast5_fu_1703_p1 = tmp_80_i_i_i1_fu_1694_p4;

assign tmp_80_i_i_i1_fu_1694_p4 = {{{{1'd1}, {loc_V_7_reg_2326}}}, {1'd0}};

assign tmp_80_i_i_i7_cast3_fu_1767_p1 = tmp_80_i_i_i7_fu_1758_p4;

assign tmp_80_i_i_i7_fu_1758_p4 = {{{{1'd1}, {loc_V_9_reg_2347}}}, {1'd0}};

assign tmp_80_i_i_i_cast7_fu_1429_p1 = tmp_80_i_i_i_fu_1420_p4;

assign tmp_80_i_i_i_fu_1420_p4 = {{{{1'd1}, {loc_V_5_reg_2273}}}, {1'd0}};

assign tmp_81_i_i_i1_cast_fu_1600_p1 = $signed(tmp_81_i_i_i1_fu_1594_p2);

assign tmp_81_i_i_i1_fu_1594_p2 = (8'd127 - loc_V_6_fu_1562_p4);

assign tmp_81_i_i_i2_cast_fu_1654_p1 = $signed(tmp_81_i_i_i2_fu_1648_p2);

assign tmp_81_i_i_i2_fu_1648_p2 = (8'd127 - loc_V_8_fu_1616_p4);

assign tmp_81_i_i_i_cast_fu_1408_p1 = $signed(tmp_81_i_i_i_fu_1402_p2);

assign tmp_81_i_i_i_fu_1402_p2 = (8'd127 - loc_V_4_fu_1370_p4);

assign tmp_82_i_i_i1_fu_1713_p1 = $unsigned(sh_assign_3_cast_fu_1707_p1);

assign tmp_82_i_i_i2_fu_1777_p1 = $unsigned(sh_assign_5_cast_fu_1771_p1);

assign tmp_82_i_i_i_fu_1439_p1 = $unsigned(sh_assign_1_cast_fu_1433_p1);

assign tmp_83_i_i_i1_fu_1717_p2 = tmp_80_i_i_i1_fu_1694_p4 >> sh_assign_3_cast_cas_fu_1710_p1;

assign tmp_83_i_i_i2_fu_1781_p2 = tmp_80_i_i_i7_fu_1758_p4 >> sh_assign_5_cast_cas_fu_1774_p1;

assign tmp_83_i_i_i_fu_1443_p2 = tmp_80_i_i_i_fu_1420_p4 >> sh_assign_1_cast_cas_fu_1436_p1;

assign tmp_84_i_i_i1_fu_1723_p2 = tmp_80_i_i_i1_cast5_fu_1703_p1 << tmp_82_i_i_i1_fu_1713_p1;

assign tmp_84_i_i_i2_fu_1787_p2 = tmp_80_i_i_i7_cast3_fu_1767_p1 << tmp_82_i_i_i2_fu_1777_p1;

assign tmp_84_i_i_i_fu_1449_p2 = tmp_80_i_i_i_cast7_fu_1429_p1 << tmp_82_i_i_i_fu_1439_p1;

assign tmp_86_i_i_i1_fu_1829_p1 = p_Val2_57_reg_2363;

assign tmp_86_i_i_i2_fu_1853_p1 = p_Val2_62_reg_2368;

assign tmp_86_i_i_i_fu_1484_p1 = p_Val2_52_fu_1477_p3;

assign tmp_89_i_i_i1_fu_1832_p2 = (32'd0 - tmp_86_i_i_i1_fu_1829_p1);

assign tmp_89_i_i_i2_fu_1856_p2 = (32'd0 - tmp_86_i_i_i2_fu_1853_p1);

assign tmp_89_i_i_i_fu_1488_p2 = (32'd0 - tmp_86_i_i_i_fu_1484_p1);

assign tmp_i2_i_i_fu_560_p1 = p_Result_i_i_i_fu_550_p4;


always @ (p_Result_37_fu_693_p3) begin
    if (p_Result_37_fu_693_p3[0] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd0;
    end else if (p_Result_37_fu_693_p3[1] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd1;
    end else if (p_Result_37_fu_693_p3[2] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd2;
    end else if (p_Result_37_fu_693_p3[3] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd3;
    end else if (p_Result_37_fu_693_p3[4] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd4;
    end else if (p_Result_37_fu_693_p3[5] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd5;
    end else if (p_Result_37_fu_693_p3[6] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd6;
    end else if (p_Result_37_fu_693_p3[7] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd7;
    end else if (p_Result_37_fu_693_p3[8] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd8;
    end else if (p_Result_37_fu_693_p3[9] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd9;
    end else if (p_Result_37_fu_693_p3[10] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd10;
    end else if (p_Result_37_fu_693_p3[11] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd11;
    end else if (p_Result_37_fu_693_p3[12] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd12;
    end else if (p_Result_37_fu_693_p3[13] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd13;
    end else if (p_Result_37_fu_693_p3[14] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd14;
    end else if (p_Result_37_fu_693_p3[15] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd15;
    end else if (p_Result_37_fu_693_p3[16] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd16;
    end else if (p_Result_37_fu_693_p3[17] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd17;
    end else if (p_Result_37_fu_693_p3[18] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd18;
    end else if (p_Result_37_fu_693_p3[19] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd19;
    end else if (p_Result_37_fu_693_p3[20] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd20;
    end else if (p_Result_37_fu_693_p3[21] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd21;
    end else if (p_Result_37_fu_693_p3[22] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd22;
    end else if (p_Result_37_fu_693_p3[23] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd23;
    end else if (p_Result_37_fu_693_p3[24] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd24;
    end else if (p_Result_37_fu_693_p3[25] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd25;
    end else if (p_Result_37_fu_693_p3[26] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd26;
    end else if (p_Result_37_fu_693_p3[27] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd27;
    end else if (p_Result_37_fu_693_p3[28] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd28;
    end else if (p_Result_37_fu_693_p3[29] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd29;
    end else if (p_Result_37_fu_693_p3[30] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd30;
    end else if (p_Result_37_fu_693_p3[31] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd31;
    end else if (p_Result_37_fu_693_p3[32] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd32;
    end else if (p_Result_37_fu_693_p3[33] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd33;
    end else if (p_Result_37_fu_693_p3[34] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd34;
    end else if (p_Result_37_fu_693_p3[35] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd35;
    end else if (p_Result_37_fu_693_p3[36] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd36;
    end else if (p_Result_37_fu_693_p3[37] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd37;
    end else if (p_Result_37_fu_693_p3[38] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd38;
    end else if (p_Result_37_fu_693_p3[39] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd39;
    end else if (p_Result_37_fu_693_p3[40] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd40;
    end else if (p_Result_37_fu_693_p3[41] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd41;
    end else if (p_Result_37_fu_693_p3[42] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd42;
    end else if (p_Result_37_fu_693_p3[43] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd43;
    end else if (p_Result_37_fu_693_p3[44] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd44;
    end else if (p_Result_37_fu_693_p3[45] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd45;
    end else if (p_Result_37_fu_693_p3[46] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd46;
    end else if (p_Result_37_fu_693_p3[47] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd47;
    end else if (p_Result_37_fu_693_p3[48] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd48;
    end else if (p_Result_37_fu_693_p3[49] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd49;
    end else if (p_Result_37_fu_693_p3[50] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd50;
    end else if (p_Result_37_fu_693_p3[51] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd51;
    end else if (p_Result_37_fu_693_p3[52] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd52;
    end else if (p_Result_37_fu_693_p3[53] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd53;
    end else if (p_Result_37_fu_693_p3[54] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd54;
    end else if (p_Result_37_fu_693_p3[55] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd55;
    end else if (p_Result_37_fu_693_p3[56] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd56;
    end else if (p_Result_37_fu_693_p3[57] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd57;
    end else if (p_Result_37_fu_693_p3[58] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd58;
    end else if (p_Result_37_fu_693_p3[59] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd59;
    end else if (p_Result_37_fu_693_p3[60] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd60;
    end else if (p_Result_37_fu_693_p3[61] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd61;
    end else if (p_Result_37_fu_693_p3[62] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd62;
    end else if (p_Result_37_fu_693_p3[63] == 1'b1) begin
        tmp_i4_i_i_fu_701_p3 = 64'd63;
    end else begin
        tmp_i4_i_i_fu_701_p3 = 64'd64;
    end
end

assign tmp_i_i_fu_671_p2 = ($signed(11'd1027) + $signed(loc_V_reg_1904));

assign tmp_i_i_i_i1_cast4_fu_1576_p1 = loc_V_6_fu_1562_p4;

assign tmp_i_i_i_i8_cast2_fu_1630_p1 = loc_V_8_fu_1616_p4;

assign tmp_i_i_i_i_cast6_fu_1384_p1 = loc_V_4_fu_1370_p4;

assign tmp_to_int_fu_1309_p1 = reg_441;

assign x_assign_fu_498_p3 = ((Initialized_load_reg_1882[0:0] === 1'b1) ? grp_fu_415_p1 : 64'd4560383242888282112);

always @ (posedge ap_clk) begin
    OP1_V_reg_2048[97:49] <= 49'b0000000000000000000000000000000000000000000000000;
    tmp_64_i_i_reg_2055[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    tmp_86_i_i_i_reg_2289[31] <= 1'b0;
end

endmodule //vibrato
